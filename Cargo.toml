[package]
authors = ["Ben Scholar <bens@digitalman.com>"]
edition = "2018"
readme = "README.md"
name = "rust-encoder"
version = "0.1.0"

[dependencies]
cortex-m = "0.6.0"
cortex-m-rt = "0.6.10"
cortex-m-semihosting = "0.3.3"
panic-halt = "0.2.0"
stm32f1 = "0.11.0"
cortex-m-rtic = "0.5.5"
panic-semihosting = "0.5.3"
micromath = "1.0.1"
embedded-hal = "0.2.3"
byteorder = { version = "1.3.4", default-features = false }
heapless = "0.5.5"
num-traits = { version="0.2.12", default-features = false}
volatile = "0.3.0"
# microcrates-bytes = "0.4.8"

[dependencies.stm32f1xx-hal]
version = "0.6.1"
features = ["stm32f103", "rt"]

[patch.crates-io]
stm32f1xx-hal = { git = "https://github.com/stm32-rs/stm32f1xx-hal", features = ["stm32f103", "rt"] }

# Uncomment for the panic example.
# panic-itm = "0.4.1"

# Uncomment for the allocator example.
# alloc-cortex-m = "0.3.5"

# Uncomment for the device example.
# Update `memory.x`, set target to `thumbv7em-none-eabihf` in `.cargo/config`,
# and then use `cargo build --examples device` to build it.
# [dependencies.stm32f3]
# features = ["stm32f303", "rt"]
# version = "0.7.1"

# this lets you use `cargo fix`!
[[bin]]
name = "rust-encoder"
test = false
bench = false

[profile.release]
codegen-units = 1 # better optimizations
debug = true # symbols are nice and they don't increase the size on Flash
lto = true # better optimizations
